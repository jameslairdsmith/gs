% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day.R
\name{on_mday}
\alias{on_mday}
\alias{on_yday}
\alias{on_qday}
\alias{on_wday}
\alias{on_weekend}
\alias{on_weekday}
\title{Specify the day(s) of a schedule}
\usage{
on_mday(...)

on_yday(...)

on_qday(...)

on_wday(..., week_start = getOption("lubridate.week.start", 7))

on_weekend()

on_weekday()
}
\arguments{
\item{...}{A numeric vector of day specifications. In the case of \code{on_wday} the
elements can also be characters (see \emph{Details} section below).}

\item{week_start}{If using the \code{on_wday} function with numeric day elements,
you can specify which ISO convention is used; 1 means Monday,
7 means Sunday (default).}
}
\value{
A schedule object.
}
\description{
Creates a schedule of events occuring on the specified days of certain
periods.

The type of period (week, month, quarter, year) is determined by the
function used (see \emph{Details} section).
}
\details{
Each function creates a schedule where the events occur only on the specified
days within the given period:
\itemize{
\item \code{on_mday} for days of the month. Eg:
\itemize{
\item \code{on_mday(1)} for the 1st day of each month.
\item \code{on_mday(15)} for the 15th day of each month.
\item \code{on_mday(31)} for the 31st day of each month (where that exists).
}
\item \code{on_yday} for days of the year. Eg:
\itemize{
\item \code{on_yday(1)} for the 1st day of each year.
\item \code{on_yday(300)} for the 300th day of each year.
\item \code{on_yday(366)} for the 366th day of each year (where that exists).
}
\item \code{on_qday} for days in the quarter. Eg:
\itemize{
\item \code{on_qday(1)} for the 1st day of every quarter.
\item \code{on_qday(45)} for the 45th day of every quarter.
\item \code{on_qday(92)} for the 92nd day of every quarter (where that exists).
}
\item \code{on_wday} for days of the week.
\itemize{
\item These can be specified using numbers (where by default 1 is Sunday,
see the \emph{Arguments} section above.)
\itemize{
\item \code{on_wday(1)} for Sundays (by default).
\item \code{on_wday(7)} for Saturdays (by default).
}
\item Or using weekday names:
\itemize{
\item \code{on_wday("Sunday")} for Sundays.
\item \code{on_wday("Saturday")} for Saturdays.
\item \code{on_wday("Wednesday")} for Wednesdays.
}
\item Or their abbreviations:
\itemize{
\item \code{on_wday("Sun")} for Sundays.
\item \code{on_wday("Sat")} for Saturdays.
\item \code{on_wday("Wed")} for Wednesdays.
}
}
}

All functions accept multiple day elements in a single call. For example
\code{on_mday(7, 9)} produces a schedule of dates occuring on the 7th and 9th
days of every month. Likewise \code{on_mday(1:5)} produces a schedule of dates
occuring on the first five days of every month. Similarly
\code{on_wday("Tue", "Thu")} produces a schedule of events occuring every
week on both Tuesdays and Thursdays.

\code{on_weekend()} is a convenience function for
\code{on_wday("Sat", "Sun")}. \code{on_weekday()} is a convenience function for
\code{doesnt_occur(on_wday("Sat", "Sun"))}.
}
\examples{

my_dates <- seq.Date(from = as.Date("2000-01-01"),
                     to = as.Date("2000-12-01"),
                     by = "1 month")

happen(on_mday(1), my_dates)

happen(on_yday(1), my_dates)

happen(on_qday(1), my_dates)

happen(on_wday("Tue"), my_dates)

happen(on_wday("Tue", "Thu"), my_dates)

happen(on_weekend(), my_dates)
happen(on_weekday(), my_dates)

## Invalid inputs will produce an immediate error:
\dontrun{
on_mday(32)
on_wday(8)}
}
\keyword{date,}
\keyword{day,}
\keyword{month,}
\keyword{schedule}
\keyword{week,}
